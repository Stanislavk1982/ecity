{"version":3,"sources":["../../../source/scripts/components/play-game.js"],"names":["define","React","Superagent","MapSvg","Settings","Timer","TimerPlaceholder","createClass","displayName","getInitialState","city","inputLetter","warningMessage","winnerMessage","regionId","regionClientId","disabled","showTimer","componentDidMount","props","game","onChangeGameId","componentWillUnmount","offChangeGameId","gameId","setState","onTimeout","onButtonClick","event","console","log","state","post","host","api","type","set","send","game_id","city_name","end","error","response","body","JSON","parse","text","cityClient","onAddCity","name","i","letter","length","toUpperCase","gameStatus","code","onInputChange","target","value","slice","render"],"mappings":"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","file":"play-game.js","sourcesContent":["define(['react', 'superagent', '../components/map-svg', '../settings', '../components/timer', '../components/timer-placeholder'], function (React, Superagent, MapSvg, Settings, Timer, TimerPlaceholder) {\n\n    return React.createClass ({\n\n        displayName: 'PlayGame',\n\n        getInitialState: function () {\n            return {\n                city: '',\n                inputLetter: '',\n                warningMessage: '',\n                winnerMessage: '',\n                regionId: null,\n                regionClientId: null,\n                disabled: false,\n                showTimer: 0 \n            };\n        },\n\n        componentDidMount: function () {\n            this.props.game.onChangeGameId(this.onChangeGameId);\n        },\n\n        componentWillUnmount: function () {\n            this.props.game.offChangeGameId(this.onChangeGameId);\n        },\n\n        onChangeGameId: function (gameId) {\n            this.setState({\n                city: '',\n                inputLetter: '',\n                warningMessage: '',\n                winnerMessage: '',\n                regionId: null,\n                disabled: false,\n                showTimer: 0\n            });\n        },\n\n        onTimeout: function () {\n            this.setState({\n                showTimer: 0,\n                disabled: true,\n                warningMessage: 'ВРЕМЯ ВЫШЛО'\n            });\n        },\n\n        onButtonClick: function (event) {\n            this.setState({\n                        warningMessage: '',\n                    });\n            console.log(this.state.city);\n            console.log(this.props.game.gameId);\n            Superagent\n                .post(Settings.host + Settings.api + '/game/move')\n                .type('form')\n                .set('Accept', 'application/json')\n                .send({\n                    game_id: this.props.game.gameId,\n                    city_name: this.state.city\n                })\n                .end((error, response) => {\n                    console.log(response);\n                    var state = {};\n\n                    response.body = JSON.parse(response.text);\n                    \n                    if (response.body.cityClient){\n                        this.props.onAddCity(response.body.cityClient);\n                        state.regionClientId = response.body.cityClient.regionId;\n                    }\n                    \n                    if (response.body.city){\n                        var name = response.body.city.name;\n                        var i = 1;\n                        var letter = name[name.length - i];\n\n                        while (letter === 'й' || letter === 'ы' || letter === 'ь' || letter === 'ъ' || letter === 'ц' || letter === ' '){\n                            i++;\n                            letter = name[name.length - i];\n                        }\n                        letter = letter.toUpperCase();\n\n                        state.city = letter;\n                        state.inputLetter = letter;\n                        state.regionId = response.body.city.regionId;\n                        state.showTimer = this.state.showTimer + 1;\n\n                        this.props.onAddCity(response.body.city);\n                    }\n                    \n                    if (response.body.gameStatus.code !== 0){\n                        state.city =  this.state.inputLetter;\n                    }\n                    var warningMessage = '';\n                    var winnerMessage = '';\n                    switch (response.body.gameStatus.code) {\n                        case 2:\n                            warningMessage = 'Игра закончена. Начните новую игру';\n                            state.disabled = true;\n                            break;\n                        case 10:\n                            warningMessage = 'Такого города нет в базе';\n                            break;\n                        case 12:\n                            warningMessage = 'Город начинается с неправильной буквы';\n                            break;\n                        case 11:\n                            warningMessage = 'Город уже был использован';\n                            break;\n                        case 20:\n                            winnerMessage = 'Поздравляем! Вы победили! Сыграйте снова!';\n                            state.disabled = true;\n                            break;\n                        case 21:\n                            winnerMessage = 'Вы проиграли. Попробуйте еще раз.';\n                            state.disabled = true;\n                            break;\n                        default:\n                            winnerMessage = '';\n                            warningMessage = '';\n                            break;\n                    }\n                    state.winnerMessage = winnerMessage\n                    state.warningMessage = warningMessage;\n                    this.setState (state);\n\n                });\n        },\n\n        onInputChange: function (event) {\n            var city = event.target.value;\n            city = city.slice(0, 1).toUpperCase() + city.slice(1);\n\n            if (this.state.inputLetter && city[0] !== this.state.inputLetter){\n                city = this.state.inputLetter;\n            }\n\n            this.setState({\n                city: city\n            });\n        },\n\n        render: function () {\n            return (\n                <div className=\"play-game\">\n                    {this.state.showTimer > 0 ? (\n                        <Timer key={'timer_' + this.state.showTimer} time={60} onTimeout={this.onTimeout}/>\n                    ) : (\n                        <TimerPlaceholder/>\n                    )}\n                    <div className='playField'>\n                        <div>\n                        <input className='city buttonStyle' type=\"text\" value={this.state.city} onChange={this.onInputChange} placeholder=\"Введите город\" disabled={this.state.disabled}/>\n                        </div>\n                        <div>\n                        <button className='send buttonStyle'onClick={this.onButtonClick}>Отправить</button>\n                        </div>\n                        <div>\n                        <button className='giveUp buttonStyle bg-color text-color-yellow'>Сдаться</button>\n                        </div>\n                    </div>\n                    <div className='warning_message'>\n                        {this.state.warningMessage}\n                    </div>\n                    <div className='winner-message'>\n                        {this.state.winnerMessage}\n                    </div>\n                    <MapSvg regionId={this.state.regionId} regionClientId={this.state.regionClientId}/>\n                </div>\n            );\n        }\n\n    });\n\n});\n"]}