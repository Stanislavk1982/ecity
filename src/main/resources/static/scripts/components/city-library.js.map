{"version":3,"sources":["../../../source/scripts/components/city-library.js"],"names":["define","React","Superagent","Settings","alphabet","createClass","displayName","getInitialState","library","expanded","letter","cityInfo","componentDidMount","getLibrary","get","host","api","set","end","error","response","setState","body","onClickButton","event","state","citySort","sorted","i","x","length","char","name","toLowerCase","push","addCities","obj","cities","map","city","id","getCityInfo","bind","console","log","JSON","parse","text","render","sort","toUpperCase","population","url"],"mappings":"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","file":"city-library.js","sourcesContent":["define(['react', 'superagent', '../settings'], function (React, Superagent, Settings) {\n    \n    var alphabet = ['а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ы', 'э', 'ю', 'я'];\n    \n    return React.createClass ({\n        \n        displayName: 'City-Library',\n        \n        getInitialState: function () {\n            return {\n                library: [],\n                expanded: null,\n                letter: '',\n                cityInfo: null\n                /*\n                letterStyle: {\n                    color: 'black'\n                }\n*/\n            };\n        },\n        \n        componentDidMount: function(){\n            this.getLibrary();    \n        },\n        \n        getLibrary: function () {\n            Superagent\n            .get(Settings.host + Settings.api + '/cities')\n                .set('Accept', 'application/json')\n                .end((error, response) => /* arrow function */{\n                    this.setState({\n                            library: response.body\n                    });\n                });\n        },\n        \n        onClickButton: function(letter, event){\n            this.setState ({\n                expanded: this.state.expanded === letter ? null : letter,\n                letter: letter,\n                cityInfo: null\n                //letterStyle: this.state.letterStyle.color === 'red' ? {color: 'black'} : {color: 'red'}\n            });\n        },\n        \n        citySort: function(){\n            var sorted = {};\n            for (var i = 0, x = this.state.library.length; i < x; i++){\n                var char = this.state.library[i].name[0].toLowerCase();\n                if (!sorted[char]){\n                    sorted[char] = [this.state.library[i]];\n                } else {\n                    sorted[char].push(this.state.library[i]);\n                }\n            }\n            return sorted;\n        },\n                \n        addCities: function(obj){\n            var letter = this.state.letter;\n            var cities = obj[letter];\n            return (\n                this.state.expanded === letter ? (\n                    <div key={letter} className='table-cities'>\n                        <ul>\n                            {cities.map((city, i) => {\n                                return (\n                                    <li key={city.id}>\n                                        <p onClick={this.getCityInfo.bind(this, city.id)}>{city.name}</p>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                ) : null\n            );\n        },\n                \n        getCityInfo: function(city){\n            if (city){\n                Superagent\n                    .get(Settings.host + Settings.api + '/city/' + city)\n                    .set('Accept', 'application/json')\n/*\n                    .query({\n                        id: city\n                    })                \n*/\n                    .end((error, response) =>{\n                        console.log(JSON.parse(response.text));\n                        this.setState({\n                            cityInfo: JSON.parse(response.text)\n                        });   \n                    });\n            }\n        },\n        \n        render: function () {\n            var sort = this.citySort();\n            return (\n                <div className=\"city-library\">\n                    <ul className='letters'>\n                        {alphabet.map((letter, i) => {\n                            var cities = sort[letter];\n                            if (cities){\n                                return (\n                                    <li key={i}>\n                                        <h2 onClick={this.onClickButton.bind(this, letter)} /* style={this.state.letterStyle} */>\n                                            {letter.toUpperCase()}\n                                        </h2>\n                                        \n                                    </li>\n                                );\n                            }\n                        })}\n                    </ul>\n                    {this.addCities(sort)}\n                    {this.state.cityInfo ? (\n                        <div key={this.state.cityInfo.id} className='city_info'>\n                            <h3>{this.state.cityInfo.name}</h3>\n                            <p><strong>Население: </strong>{this.state.cityInfo.population}</p>\n                            <span><strong>Узнать больше: </strong></span>\n                            <a href={this.state.cityInfo.url} target=\"_blank\">{this.state.cityInfo.url}</a>\n                        </div>\n                    ) : null}\n                </div>\n            );\n        }\n        \n    });\n    \n});\n\n\n"]}