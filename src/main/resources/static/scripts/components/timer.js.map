{"version":3,"sources":["../../../source/scripts/components/timer.js"],"names":["define","React","createClass","displayName","propTypes","time","PropTypes","number","isRequired","onTimeout","func","getInitialState","props","componentDidMount","interval","setInterval","updateTimer","componentWillUnmount","clearInterval","state","Math","max","setState","render","toString"],"mappings":";;AAAAA,OAAO,CAAC,OAAD,CAAP,EAAkB,UAAUC,KAAV,EAAiB;;AAE/B,WAAOA,MAAMC,WAAN,CAAmB;;AAEtBC,qBAAa,OAFS;;AAItBC,mBAAW;AACPC,kBAAMJ,MAAMK,SAAN,CAAgBC,MAAhB,CAAuBC,UADtB;AAEPC,uBAAWR,MAAMK,SAAN,CAAgBI,IAAhB,CAAqBF;AAFzB,SAJW;;AAStBG,yBAAiB,2BAAY;AACzB,mBAAO;AACHN,sBAAM,KAAKO,KAAL,CAAWP;AADd,aAAP;AAGH,SAbqB;;AAetBQ,2BAAmB,6BAAW;AAC1B,iBAAKC,QAAL,GAAgBC,YAAY,KAAKC,WAAjB,EAA8B,IAA9B,CAAhB;AACH,SAjBqB;;AAmBtBC,8BAAsB,gCAAW;AAC7BC,0BAAc,KAAKJ,QAAnB;AACH,SArBqB;;AAuBtBE,qBAAa,uBAAU;;AAEnB,gBAAIG,QAAQ,EAAZ;;AAEAA,kBAAMd,IAAN,GAAae,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKF,KAAL,CAAWd,IAAX,GAAkB,CAA9B,CAAb;;AAEA,iBAAKiB,QAAL,CAAcH,KAAd;;AAEA,gBAAIA,MAAMd,IAAN,KAAe,CAAnB,EAAsB;AAClBa,8BAAc,KAAKJ,QAAnB;;AAEA,qBAAKF,KAAL,CAAWH,SAAX;AACH;AACJ,SApCqB;;AAsCtBc,gBAAQ,kBAAY;AAChB,gBAAIlB,OAAO,KAAKc,KAAL,CAAWd,IAAX,CAAgBmB,QAAhB,EAAX;;AAEA,gBAAI,KAAKL,KAAL,CAAWd,IAAX,GAAkB,EAAtB,EAA0B;AACtBA,uBAAO,MAAMA,IAAb;AACH;;AAED,mBACI;AAAA;AAAA,kBAAK,WAAU,OAAf;AACI;AAAA;AAAA;AACKA;AADL,iBADJ;AAII,6CAAK,WAAU,sBAAf,GAJJ;AAKI,6CAAK,WAAU,uBAAf;AALJ,aADJ;AASH;;AAtDqB,KAAnB,CAAP;AA0DH,CA5DD","file":"timer.js","sourcesContent":["define(['react'], function (React) {\n\n    return React.createClass ({\n\n        displayName: 'Timer',\n\n        propTypes: {\n            time: React.PropTypes.number.isRequired,\n            onTimeout: React.PropTypes.func.isRequired\n        },\n\n        getInitialState: function () {\n            return {\n                time: this.props.time\n            };\n        },\n\n        componentDidMount: function (){\n            this.interval = setInterval(this.updateTimer, 1000);\n        },\n\n        componentWillUnmount: function (){\n            clearInterval(this.interval);\n        },\n\n        updateTimer: function(){\n\n            var state = {};\n\n            state.time = Math.max(0, this.state.time - 1);\n\n            this.setState(state);\n\n            if (state.time === 0) {\n                clearInterval(this.interval);\n\n                this.props.onTimeout();\n            }\n        },\n\n        render: function () {\n            var time = this.state.time.toString();\n\n            if (this.state.time < 10) {\n                time = '0' + time;\n            }\n\n            return (\n                <div className='score'>\n                    <p>\n                        {time}\n                    </p>\n                    <div className=\"first-number counter\"></div>\n                    <div className=\"second-number counter\"></div>\n                </div>\n            );\n        }\n\n    });\n\n});\n"]}