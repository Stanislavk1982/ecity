{"version":3,"sources":["../../../source/scripts/pages/register.js"],"names":["define","React","Superagent","Settings","createClass","displayName","getInitialState","login","password","email","name","surname","city","warningMessage","onInputChange","target","event","value","setState","emailValidation","atpos","indexOf","dotpos","lastIndexOf","length","onButtonClick","state","slice","toUpperCase","post","host","api","set","type","send","firstName","lastName","cityLive","end","error","response","console","log","body","code","location","href","render","bind"],"mappings":"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","file":"register.js","sourcesContent":["define(['react', 'superagent', '../settings'], function (React, Superagent, Settings) {\n\n    return React.createClass({\n\n        displayName: 'Register',\n        \n        getInitialState: function () {\n            return {\n                login: '',\n                password: '',\n                email: '',\n                name: '',\n                surname: '',\n                city: '',\n                warningMessage: ''\n            };\n        },\n\n        \n        onInputChange: function (target, event) {\n            var value =  event.target.value;\n            \n            this.setState({\n                        [target]: value\n            });\n        },\n        \n        emailValidation: function(email){\n            var atpos = email.indexOf(\"@\");\n            var dotpos = email.lastIndexOf(\".\") || false;\n            if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length || dotpos === false) {\n                this.setState({\n                        email: false,\n                        warningMessage: 'Недействительный email'\n                });\n            } else {\n                return email;\n            }\n        },\n        \n        onButtonClick: function (event) {\n            var login = this.state.login,\n            password = this.state.password,\n            email =  this.emailValidation(this.state.email),\n            name = this.state.name.slice(0, 1).toUpperCase() + this.state.name.slice(1),\n            surname = this.state.surname.slice(0, 1).toUpperCase() + this.state.surname.slice(1),\n            city = this.state.city.slice(0, 1).toUpperCase() + this.state.city.slice(1),\n            state = {};\n            \n            if (!login || !password){\n                        state.warningMessage = 'Заполните все обязательные поля'\n            } else if (login && password && email) {\n                \n                Superagent\n                    .post(Settings.host + Settings.api + '/register')\n                    .set('Accept', 'application/json')\n                    .type('form')\n                    .send({\n                        login: login,\n                        password: password,\n                        email: email,\n                        firstName: name,\n                        lastName: surname,\n                        cityLive: city\n                    })\n                    .end((error, response) => {\n                        console.log(error, response);\n                        switch (response.body.code) {\n                            case 31:\n                                location.href = '#/login';\n                                console.log(31);\n                                break;\n                            case 32:\n                                console.log(32);\n                                state.warningMessage = 'Игрок с таким именем уже существует';\n                                break;\n                            default:\n                                break;\n                        }\n                        this.setState(state);\n                    });\n                \n            } else {\n                console.log('not ok');\n            }\n            this.setState(state);\n            \n        },\n        \n        render: function () {\n            return (\n                <div>\n                    <div>\n                        <img src=\"/img/bg.png\" className=\"bg-layer-1\" alt=\"\"/>\n                    </div>\n                    <div className=\"register bg-color\">\n                        <div className=\"logo\">\n                            <p>E-City</p>\n                        </div>\n                        <div>\n                            <input type=\"text\" className='register_input_style' placeholder=\"Логин\" onChange={this.onInputChange.bind(this, 'login')}/>\n                        </div>\n                        <div>\n                            <input type=\"password\" className='register_input_style' placeholder=\"Пароль\" onChange={this.onInputChange.bind(this, 'password')}/>\n                        </div>\n                        <div>\n                            <input type=\"email\" className='register_input_style' placeholder=\"Email\" onChange={this.onInputChange.bind(this, 'email')}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className='register_input_style' placeholder=\"Имя(опционально)\" onChange={this.onInputChange.bind(this, 'name')}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className='register_input_style' placeholder=\"Фамилия(опционально)\" onChange={this.onInputChange.bind(this, 'surname')}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className='register_input_style' placeholder=\"Город(опционально)\"onChange={this.onInputChange.bind(this, 'city')}/>\n                        </div>\n                        <div className='warning-message'>\n                            {this.state.warningMessage}\n                        </div>\n                        <div>\n                            <input type=\"submit\" className='register_submit' onClick={this.onButtonClick} value=\"Зарегистрироваться\"/>\n                        </div>\n                    </div>\n                </div>  \n            );\n        }\n    });\n\n});\n"]}